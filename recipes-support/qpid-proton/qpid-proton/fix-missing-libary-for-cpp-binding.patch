diff -urN qpid-proton-0.28.0~/CMakeLists.txt qpid-proton-0.28.0/CMakeLists.txt
--- qpid-proton-0.28.0~/CMakeLists.txt	2019-08-20 15:03:13.807056363 +0800
+++ qpid-proton-0.28.0/CMakeLists.txt	2019-08-21 11:15:26.282136822 +0800
@@ -222,15 +222,6 @@
 # So make these cached variables and the specific variables non cached
 # and derived from them.
 
-if (NOT DEFINED LIB_SUFFIX)
-    get_property(LIB64 GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS)
-    if ("${LIB64}" STREQUAL "TRUE" AND ${CMAKE_SIZEOF_VOID_P} STREQUAL "8")
-        set(LIB_SUFFIX 64)
-    else()
-        set(LIB_SUFFIX "")
-    endif()
-endif()
-
 # Start of variables used during install
 set (INCLUDE_INSTALL_DIR include CACHE PATH "Include file directory")
 set (LIB_INSTALL_DIR "lib${LIB_SUFFIX}" CACHE PATH "Library object file directory")
@@ -354,7 +345,7 @@
   # DEFAULT_{uppercase name of binding} to ON
 
   # Prerequisites for Python wrapper:
-  find_package (PythonLibs ${PYTHON_VERSION_STRING} EXACT)
+  find_package (PythonLibs 2.7 REQUIRED)
   # TODO aconway 2018-09-07: get python binding tests working with sanitizers
   if (PYTHONLIBS_FOUND AND NOT SANITIZE_FLAGS)
     set (DEFAULT_PYTHON ON)
@@ -393,10 +384,6 @@
 
 unset(BUILD_BINDINGS CACHE) # Remove from cache, only relevant when creating the initial cache.
 
-install (FILES LICENSE.txt README.md tests/share/CMakeLists.txt DESTINATION ${PROTON_SHARE})
-install (FILES tests/share/examples-README.md RENAME README.md DESTINATION ${PROTON_SHARE}/examples)
-install (DIRECTORY tests DESTINATION ${PROTON_SHARE} PATTERN share EXCLUDE)
-
 # Generate test environment settings
 configure_file(${CMAKE_SOURCE_DIR}/misc/config.sh.in
                ${CMAKE_BINARY_DIR}/config.sh @ONLY)
diff -urN qpid-proton-0.28.0~/cpp/CMakeLists.txt qpid-proton-0.28.0/cpp/CMakeLists.txt
--- qpid-proton-0.28.0~/cpp/CMakeLists.txt	2019-08-20 15:03:13.763056364 +0800
+++ qpid-proton-0.28.0/cpp/CMakeLists.txt	2019-08-20 15:06:51.195053615 +0800
@@ -269,7 +269,7 @@
 
 macro(add_cpp_test test)
   add_executable (${test} src/${test}.cpp)
-  target_link_libraries (${test} qpid-proton-cpp ${PLATFORM_LIBS})
+  target_link_libraries (${test} qpid-proton-cpp qpid-proton-core qpid-proton-proactor ${PLATFORM_LIBS})
   add_test (NAME cpp-${test}
     COMMAND ${PN_ENV_SCRIPT} -- ${test_env}  ${TEST_EXE_PREFIX_CMD} $<TARGET_FILE:${test}> ${ARGN})
 endmacro(add_cpp_test)
@@ -287,7 +287,7 @@
 add_cpp_test(credit_test)
 if (ENABLE_JSONCPP)
   add_cpp_test(connect_config_test)
-  target_link_libraries(connect_config_test qpid-proton-core) # For pn_sasl_enabled
+  target_link_libraries(connect_config_test qpid-proton-core qpid-proton-proactor) # For pn_sasl_enabled
   set_tests_properties(cpp-connect_config_test PROPERTIES WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
   # Test data and output directories for connect_config_test
   file(COPY  "${CMAKE_CURRENT_SOURCE_DIR}/testdata" DESTINATION "${CMAKE_CURRENT_BINARY_DIR}")
@@ -300,7 +300,7 @@
 
 include_directories(${CMAKE_SOURCE_DIR}/tests/include)
 add_executable(cpp-test src/cpp-test.cpp src/url_test.cpp)
-target_link_libraries(cpp-test qpid-proton-cpp ${PLATFORM_LIBS})
+target_link_libraries(cpp-test qpid-proton-cpp qpid-proton-core qpid-proton-proactor ${PLATFORM_LIBS})
 
 macro(add_catch_test tag)
   add_test (
diff -urN qpid-proton-0.28.0~/cpp/examples/CMakeLists.txt qpid-proton-0.28.0/cpp/examples/CMakeLists.txt
--- qpid-proton-0.28.0~/cpp/examples/CMakeLists.txt	2019-08-20 15:03:13.767056363 +0800
+++ qpid-proton-0.28.0/cpp/examples/CMakeLists.txt	2019-08-20 15:26:18.731038854 +0800
@@ -82,6 +82,7 @@
     ssl_client_cert
     encode_decode)
   add_executable(${example} ${example}.cpp)
+  target_link_libraries(${example} ${CMAKE_THREAD_LIBS_INIT} qpid-proton-core qpid-proton-proactor)
 endforeach()
 
 if(HAS_ENOUGH_CPP11)
@@ -90,6 +91,7 @@
       scheduled_send
       service_bus)
     add_executable(${example} ${example}.cpp)
+    target_link_libraries(${example} ${CMAKE_THREAD_LIBS_INIT} qpid-proton-core qpid-proton-proactor)
   endforeach()
 
   # Examples that use threads directly
@@ -98,7 +100,7 @@
         multithreaded_client
         multithreaded_client_flow_control)
       add_executable(${example} ${example}.cpp)
-      target_link_libraries(${example} ${CMAKE_THREAD_LIBS_INIT})
+      target_link_libraries(${example} ${CMAKE_THREAD_LIBS_INIT} qpid-proton-core qpid-proton-proactor)
     endforeach()
   endif()
 endif()
